name: ci
on:
  push:
#    branches:
#      - main
  pull_request:
    branches:
      - main

jobs:
  publish:
    runs-on: ubuntu-latest
#    needs:
#      - check_if_version_upgraded
    # We create release only if the version in the package.json have been upgraded and this CI is running against the main branch.
    # We allow branches with a PR open on main to publish pre-release (x.y.z-rc.u) but not actual releases.
#    if: |
#      needs.check_if_version_upgraded.outputs.is_upgraded_version == 'true' &&
#      (
#        github.event_name == 'push' ||
#        needs.check_if_version_upgraded.outputs.is_pre_release == 'true'
#      )
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
          ref: ${{ github.ref }}
      - run: rm -r .github/workflows
      - name: Remove tmp_branch if it exists
        run: git push origin :tmp_branch || true
      - run: git checkout -b tmp_branch
      - run: yarn --cwd $GITHUB_WORKSPACE/rust/automerge-wasm install
      - run: yarn --cwd $GITHUB_WORKSPACE/rust/automerge-wasm run build
      - run: "mkdir"
        env:
          DRY_RUN: "0"
#      - run: |
#          if [ "$(npm show . version)" = "$VERSION" ]; then
#            echo "This version is already published"
#            exit 0
#          fi
#          if [ "$NODE_AUTH_TOKEN" = "" ]; then
#            echo "Can't publish on NPM, You need a NPM_TOKEN secret."
#            false
#          fi
#          EXTRA_ARGS=""
#          if [ "$IS_PRE_RELEASE" = "true" ]; then
#              EXTRA_ARGS="--tag next"
#          fi
#          npm publish $EXTRA_ARGS
#        env:
#          NODE_AUTH_TOKEN: ${{secrets.NPM_TOKEN}}
#          VERSION: ${{ needs.check_if_version_upgraded.outputs.to_version }}
#          IS_PRE_RELEASE: ${{ needs.check_if_version_upgraded.outputs.is_pre_release }}
#      - run: |
#          git config --global user.name "actions"
#          git config --global user.email actions@github.com
#          git add -A
#          git commit -am "Remove deno dist from gitignore"
#          git push origin tmp_branch
#      - uses: softprops/action-gh-release@v1
#        with:
#          name: Release v${{ needs.check_if_version_upgraded.outputs.to_version }}
#          tag_name: v${{ needs.check_if_version_upgraded.outputs.to_version }}
#          target_commitish: tmp_branch
#          generate_release_notes: false
#          draft: false
#          prerelease: ${{ needs.check_if_version_upgraded.outputs.is_pre_release == 'true' }}
#        env:
#          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#      - name: Remove tmp_branch
#        run: git push origin :tmp_branch

